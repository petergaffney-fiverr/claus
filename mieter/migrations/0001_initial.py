# Generated by Django 2.1.5 on 2020-07-27 10:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Beziehung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beziehung', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Mieterperson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nachname', models.CharField(default=None, max_length=50)),
                ('vorname', models.CharField(default=None, max_length=50)),
                ('geburtsdatum', models.DateField(default=None)),
                ('anschrift_strasse', models.CharField(default=None, max_length=50)),
                ('anschrift_hausnummer', models.CharField(default=None, max_length=50)),
                ('anschrift_plz', models.CharField(default=None, max_length=5)),
                ('anschrift_stadt', models.CharField(default=None, max_length=50)),
                ('beruf', models.CharField(default=None, max_length=50, verbose_name='Ausgeübter Beruf')),
                ('einkommen', models.IntegerField(default=None, verbose_name='Mtl. Nettoeinkommen')),
                ('arbeitgeber_name', models.CharField(default=None, max_length=50, verbose_name='Dezeitiger Arbeitgeber')),
                ('arbeitgeber_anschrift', models.CharField(default=None, max_length=100)),
                ('arbeitgeber_telefonnummer', models.CharField(default=None, max_length=30)),
                ('arbeitsgeber_datum_besch', models.DateField(default=None)),
                ('vermieter_name', models.CharField(default=None, max_length=100)),
                ('vermieter_anschrift', models.CharField(default=None, max_length=100)),
                ('vermieter_telefonnummer', models.CharField(default=None, max_length=30)),
                ('mietrueckstellungen', models.BooleanField(blank=True, choices=[(None, 'N/A'), (True, 'Yes'), (False, 'No')], default=None, null=True, verbose_name='Bestehen Mietrückstände aus bisherigen Mietverhältnissen?')),
                ('raeumungsklage', models.BooleanField(choices=[(None, 'N/A'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='In den letzten fünf Jahren wurde Räumungsklage gegen mich erhoben')),
                ('raeumungsklage_date', models.DateField(default=None)),
                ('zwangsvollstraeckung', models.BooleanField(choices=[(None, 'N/A'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='In den letzten fünf Jahren wurde Zwangsvollstreckung gegen mich eingeleitet')),
                ('zwangsvollstraeckung_date', models.DateField(default=None)),
                ('eid_versicherung', models.BooleanField(choices=[(None, 'N/A'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='In den letzten fünf Jahren habe ich eine eidesstattliche Versicherung abgegeben')),
                ('eid_versicherung_date', models.DateField(default=None)),
                ('insolvenzverfahren', models.BooleanField(choices=[(None, 'N/A'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='In den letzten fünf Jahren wurde ein Insolvenzverfahren gegen mich eröffnet')),
                ('insolvenzverfahren_date', models.DateField(default=None)),
                ('vorstrafen', models.BooleanField(choices=[(None, 'N/A'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='Vorstrafen / Haftbefehl')),
                ('vorstrafen_date', models.DateField(default=None)),
                ('sozialleistungen', models.BooleanField(choices=[(None, 'N/A'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='Ich beziehe Sozialleistungen zur Zahlung der Miete / Kaution')),
                ('sozialleistungen_beschreibung', models.CharField(default=None, max_length=200, verbose_name='Welche und in welchem Umfang')),
                ('gewerbliche_nutzung', models.BooleanField(choices=[(None, 'N/A'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='Ist einge gewerbliche Nutzung der Wohnung beabsichtigt?')),
                ('gewerbliche_nutzung_zweck', models.CharField(default=None, max_length=200, verbose_name='Zweck angeben')),
                ('tierhaltung', models.BooleanField(choices=[(None, 'N/A'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='Tierhaltung beabsichtigt')),
                ('tierhaltung_beschreibung', models.CharField(default=None, max_length=200, verbose_name='Tierart / Rasse')),
                ('mieter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Nebenmieter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nachname', models.CharField(default='', max_length=50)),
                ('vorname', models.CharField(default='', max_length=50)),
                ('geburtsdatum', models.DateTimeField()),
                ('mieter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NebenmieterBeziehung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beziehung', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mieter.Beziehung')),
                ('nebenmieter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mieter.Nebenmieter')),
            ],
        ),
        migrations.CreateModel(
            name='Stadtteil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stadtteil', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Wohnungstyp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wohnungstyp', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Wunschwohnung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_miete', models.IntegerField(default=None, verbose_name='Maximale Kaltmiete pro Monat')),
                ('flaeche', models.CharField(default=None, max_length=250, verbose_name='Wohnfläche ab')),
                ('anzahl_zimmer', models.FloatField(default=None, verbose_name='Anzahl der Zimmer ab')),
                ('bezugsfertig', models.DateField(default=None, verbose_name='Bezugsfertig ab')),
                ('land', models.CharField(default='Deutschland', max_length=50, verbose_name='Land')),
                ('stadt', models.CharField(default='München', max_length=50, verbose_name='Stadt')),
                ('balkon_terrasse', models.BooleanField(default=None, verbose_name='Balkon / Terrasse')),
                ('barrierefrei', models.BooleanField(default=None, verbose_name='Barrierefrei')),
                ('haustiere', models.BooleanField(default=None, verbose_name='Haustiere erlaubt')),
                ('garage_stellplatz', models.BooleanField(default=None, verbose_name='Garage / Stellplatz')),
                ('einbaukueche', models.BooleanField(default=None, verbose_name='Einbauküche')),
                ('keller', models.BooleanField(default=None, verbose_name='Keller')),
                ('gaeste_wc', models.BooleanField(default=None, verbose_name='Gäste-WC')),
                ('aktiv', models.BooleanField(blank=True, default=None, null=True, verbose_name='Gibt an, ob Gesuch aktiv ist')),
                ('mieter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WunschwohnungStadtteil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stadtteil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mieter.Stadtteil')),
                ('wunschwohnung', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mieter.Wunschwohnung')),
            ],
        ),
        migrations.CreateModel(
            name='WunschwohnungWohnungstyp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wohnungstyp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mieter.Wohnungstyp')),
                ('wunschwohnung', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mieter.Wunschwohnung')),
            ],
        ),
    ]
